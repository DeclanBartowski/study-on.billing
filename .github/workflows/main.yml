name: CI
on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'  # Рекомендую использовать стабильную версию
          extensions: mbstring, xml, ctype, iconv, intl, pdo_pgsql, zip
          coverage: pcov
          tools: composer

      - name: Setup Docker
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.27.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Prepare environment
        run: |
          mkdir -p config/jwt
          openssl genrsa -out config/jwt/private.pem 2048
          openssl rsa -pubout -in config/jwt/private.pem -out config/jwt/public.pem
          echo "DATABASE_URL=pgsql://pguser:pguser@postgres:5432/study_on_billing" > .env.test
          echo "APP_ENV=test" >> .env.test

      - name: Build and start containers
        run: |
          docker-compose build
          docker-compose up -d
          sleep 10  # Даем время контейнерам запуститься

      - name: Initialize test database
        run: |
          docker-compose exec -T php composer install
          docker-compose exec -T php bin/console doctrine:database:create --if-not-exists --env=test
          docker-compose exec -T php bin/console doctrine:migrations:migrate -n --env=test || \
            docker-compose exec -T php bin/console doctrine:schema:update --force --env=test
          docker-compose exec -T php bin/console doctrine:fixtures:load -n --env=test

      - name: Run tests
        run: docker-compose exec -T php bin/phpunit

      - name: Cleanup
        if: always()
        run: docker-compose down
